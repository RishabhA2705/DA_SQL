# Basic Aggregate functions
use mavenmovies;
# 1: Retrieve the total number of rentals.
select count(*) from rental;

#2 Find the average rental duration (in days) of movies rented.
select * from rental;
select avg(datediff(return_date,rental_date)) as rental_duration from rental where return_date is not null;

#3 Display the first name and last name of customers in uppercase.
select * from customer;
select upper(concat(first_name, '_' , last_name)) as Full_Name from customer;

#4 Extract the month from the rental date and display it alongside the rental ID.
select rental_id, month(rental_date) as rental_month from rental;

#5 Retrieve the count of rentals for each customer (display customer ID and the count of rentals).
select customer_id, count(rental_id) as rental_count from rental group by customer_id ;

#6 Find the total revenue generated by each store.
select * from store;
select * from payment;
select * from staff;

select s.store_id, sum(p.amount) as total_revenue from payment p join staff s on p.staff_id = s.staff_id group by s.store_id;

#7 Determine the total number of rentals for each category of movies.
select * from category;
select c.name as category , count(r.rental_id) as total_rental from rental r join inventory i on r.inventory_id = i.inventory_id join film_category fc on fc.film_id = i.film_id join
category c on  fc.category_id = c.category_id group by c.name;

# 8 Find the average rental rate of movies in each language.
select l.name as lang , avg(f.rental_rate) as avg_rental_rate from film f join language l on f.language_id = l.language_id group by l.name;

#9 Display the title of the movie, customer s first name, and last name who rented it.
select r.rental_id, f.title as movie_title, c.first_name , c.last_name from customer c join rental r on r.customer_id = c.customer_id 
join inventory i on r.inventory_id = i.inventory_id join film f on i.film_id = f.film_id group by r.rental_id order by r.rental_id ;

#10 Retrieve the names of all actors who have appeared in the film "Gone with the Wind."
select a.first_name, a.last_name , concat(first_name , '_' , last_name) as Full_name from actor a join film_actor fc on a.actor_id = fc.actor_id 
join film f on fc.film_id = f.film_id where f.title = 'Go purple';
select * from film where title = 'Gone with the Wind';

#11 Retrieve the customer names along with the total amount they've spent on rentals.
select r.rental_id, r.rental_date, c.first_name, c.last_name , concat(first_name , '_' , last_name) as Full_name , p.amount as total_amount from customer c
join payment p on p.customer_id = c.customer_id join rental r on p.rental_id = r.rental_id order by rental_id;

#12 List the titles of movies rented by each customer in a particular city (e.g., 'London').
select f.title as movie_title ,c.first_name, c.last_name , concat(first_name , '_' , last_name) as Full_name from customer c 
join address a on a.address_id = c.address_id join city ci on a.city_id = ci.city_id
JOIN rental r ON c.customer_id = r.customer_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film f ON i.film_id = f.film_id
WHERE ci.city = 'London' ORDER BY c.last_name, c.first_name, f.title;

#13 Display the top 5 rented movies along with the number of times they've been rented.
SELECT f.title AS movie_title, COUNT(r.rental_id) AS times_rented FROM rental r
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film f ON i.film_id = f.film_id
GROUP BY f.title
ORDER BY times_rented DESC
LIMIT 5;

#14 Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).
SELECT c.customer_id, c.first_name, c.last_name FROM customer c JOIN rental r ON c.customer_id = r.customer_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN store s ON i.store_id = s.store_id
WHERE s.store_id IN (1, 2)
GROUP BY c.customer_id, c.first_name, c.last_name
HAVING COUNT(DISTINCT s.store_id) = 2;




